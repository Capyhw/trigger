/*!
 * Trigger.js v1.0.4
 * Copyright (c) 2021 Steven Lei
 * Released under the MIT License.
*/(()=>{"use strict";var t={991:(t,e,r)=>{r.r(e),r.d(e,{get:()=>n});function n(t){return t&&["cover","inset"].includes(t)||(t="cover"),t}},796:(t,e,r)=>{function n(t){var e={mode:"retain",values:[]};return"string"==typeof t&&""!==t.trim()&&("!"===t.substring(t.length-1)&&(e.mode="exact",t=t.substring(0,t.length-1)),t=t.replace(/!/g,""),e.values=t.split(",").map((function(t){return Number(t.trim())}))),e}r.r(e),r.d(e,{get:()=>n})},381:(t,e,r)=>{function n(t){if(!t)return null;var e=document.querySelector('[tg-ref="'.concat(t,'"]'));return!e||e.hasAttribute("tg-follow")?null:e}r.r(e),r.d(e,{get:()=>n})},566:(t,e,r)=>{r.r(e),r.d(e,{get:()=>n});function n(t){return t?Number(t):0}},641:(t,e,r)=>{function n(t){var e={};return"string"==typeof t&&""!==t.trim()&&t.split(";").forEach((function(t){var r=t.split(":");2===r.length&&(r[0].indexOf(",")>-1?r[0].split(",").forEach((function(t){e[t.trim()]=r[1].trim()})):e[r[0].trim()]=r[1].trim())})),e}r.r(e),r.d(e,{get:()=>n})},329:(t,e,r)=>{function n(t){return t||console.warn("tg-name is not set"),"--"===t.substring(0,2)?t:"--".concat(t)}r.r(e),r.d(e,{get:()=>n})},631:(t,e,r)=>{function n(t){return t||null}r.r(e),r.d(e,{get:()=>n})},716:(t,e,r)=>{r.r(e),r.d(e,{get:()=>n});function n(t){return t?Number(t):0}},418:(t,e,r)=>{r.r(e),r.d(e,{get:()=>n});function n(t){var e=t?Number(t):100;return 0===e&&(e=100),e}},473:(t,e,r)=>{r.r(e),r.d(e,{get:()=>n});function n(t){return t?Number(t):1}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,r),i.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};(()=>{r.r(n);var t={root:null,rootMargin:"0px",threshold:0};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function o(t,r){"object"===e(r)&&"function"==typeof before&&before(),document.querySelectorAll("[tg-name]").forEach((function(e){var r=e.getBoundingClientRect(),n=r.top,o=r.height;e.style.setProperty("--tg-top",n+window.scrollY),e.style.setProperty("--tg-height",o),t.observe(e)})),"object"===e(r)&&"function"==typeof after&&after()}var i=["tg-follow","tg-ref"],u={"tg-name":r(329),"tg-from":r(566),"tg-to":r(473),"tg-steps":r(418),"tg-step":r(716),"tg-map":r(641),"tg-filter":r(796),"tg-edge":r(991),"tg-follow":r(381),"tg-ref":r(631)};function l(t,e){if(void 0===u[e])return null;var r=function(t,e){if(t.hasAttribute(e)||i.includes(e))return t;var r=t;for(;(r=r.parentElement)!==document.body;)if(r.hasAttribute(e))return r;return t}(t,e),n=r.hasAttribute(e)?r.getAttribute(e):null;return u[e].get(n)}function a(t){var e=l(t,"tg-follow"),r=t;null!==e&&(r=e);var n,o=getComputedStyle(r),i=Number(o.getPropertyValue("--tg-top")),u=Number(o.getPropertyValue("--tg-height")),a=l(t,"tg-name"),c=l(r,"tg-from"),f=l(r,"tg-to"),s=l(r,"tg-steps"),g=l(r,"tg-step"),m=l(t,"tg-map"),d=l(t,"tg-filter"),p=l(r,"tg-edge"),y=Math.abs(f-c),b=0===g?y/s:g;return{el:t,top:i,height:u,name:a,from:c,to:f,steps:s,step:g,mapping:m,filter:d,edge:p,range:y,increment:b,segments:y/b,decimals:(n=b,Math.floor(n.valueOf())===n.valueOf()?0:n.toString().split(".")[1].length||0),multiplier:c>f?-1:1,lastValue:null}}function c(t){var e=document.documentElement.scrollTop,r=document.documentElement.clientHeight;t.forEach((function(t){var n=t.el,o=t.top,i=t.height,u=t.increment,l=t.segments,a=t.decimals,c=t.multiplier,f=t.name,s=t.from,g=t.to,m=t.mapping,d=t.filter,p=t.edge,y=t.lastValue;if("--_"!==f){var b,v=(e-o+r)/(r+i);"inset"===p&&(v=(e-o+r-i)/(r-i));var h=(s+Math.floor((l+1)*v)*u*c).toFixed(a);b=1===c?Math.min(Math.max(h,s),g):Math.min(Math.max(h,g),s),d.values.length>0&&!d.values.includes(b)?"exact"===d.mode&&(t.lastValue=null,n.style.removeProperty(f)):(void 0!==m[b]&&(b=m[b]),y!=b&&(n.style.setProperty(f,b),n.dispatchEvent(new CustomEvent("tg",{target:n,detail:{value:b}})),t.lastValue=b))}}))}function f(t){return function(t){if(Array.isArray(t))return s(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return s(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var g,m=[];function d(){var e;e=function(t){t.forEach((function(t){var e=t.target;t.isIntersecting?m.push(a(e)):m=m.filter((function(t){return t.el!==e}))}))},g="undefined"==typeof IntersectionObserver?(console.warn("IntersectionObserver is not supported in this browser"),null):new IntersectionObserver(e,t)}({start:function(){document.body?(d(),window.addEventListener("DOMContentLoaded",(function(){o(g),setTimeout((function(){c(f(document.querySelectorAll("[tg-name]")).map((function(t){return a(t)})))}))})),window.addEventListener("resize",(function(){o(g,{before:function(){m.forEach((function(t){g.unobserve(t.el)}))}})})),window.addEventListener("scroll",(function(t){c(m)}))):console.warn("Unable to initialise, document.body does not exist.")}}).start()})(),window.Trigger=n})();